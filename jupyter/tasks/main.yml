---
# Tasks to install python gunicorn and circus
#
- name: Include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Include OS-specific taks
  include: "{{ ansible_os_family }}.yml"

- name: Ansible service manager
  debug: var=ansible_service_mgr

- set_fact:
    vhost_block: "{{ lookup('template', 'templates/jupyter_vhost_block.j2') }}"
  with_items: "{{ nginx_vhosts }}"
  when: "{{ item.jupyter }} is defined and {{ item.jupyter }}"  

- name: vhost_block
  debug: var=vhost_block

- name: NPM fs
  file:
      path: "{{ item }}"
      state: directory
      owner: root
      group: root
      mode: oug+rwx
  with_items:
      - /tmp/.npm
      - /tmp/.npm/_locks

- name: install jupyter-dashboards-server
  become: True
  become_user: root
  shell: HOME=/tmp USER=root npm --unsafe install -g jupyter-dashboards-server

- name: Install python3 packages
  pip: executable=pip3 name={{ item }} state=present
  with_items:
      - virtualenv
      - virtualenvwrapper
      - configobj
      - py-bcrypt
      - ipython
      - jupyter-client
      - jupyter-console
      - jupyter-contrib-core
      - jupyter-contrib-nbextensions
      - jupyter-dashboards
      - jupyter-nbextensions-configurator
      - jupyter-kernel-gateway
      - jupyter-declarativewidgets
      - jupyter-dashboards-bundlers
      - pandas
      - numpy
      - plotly
      - fuzzywuzzy
      - simpledbf
      - pivottablejs
      - tables
      - sklearn
      - XlsxWriter
      - xlrd
      - ipykernel
      - autopep8

- name: Install python packages
  pip: executable=pip name={{ item }} state=present
  with_items:
      - virtualenv
      - virtualenvwrapper
      - configobj
      - py-bcrypt
      - pandas
      - numpy
      - plotly
      - sklearn
      - fuzzywuzzy
      - simpledbf
      - pivottablejs
      - tables
      - XlsxWriter
      - xlrd
      - ipykernel
      - autopep8

- name: Install python packages
  pip: executable=pip name=ipython version=5.3.0 state=present

- name: Setup jupyter group
  group:
      name: "{{ jupyter_group }}"
      system: yes
      state: present

- name: Setup jupyter user
  user:
      name: "{{ jupyter_user }}"
      state: present
      group: "{{ jupyter_group }}"
      home: /srv/jupyter-dashboards
      createhome: yes
      shell: /bin/false
      system: yes

- name: Setup fs
  file:
      path: /srv/jupyter-dashboards
      state: directory
      owner: "{{ jupyter_user }}"
      group: "{{ jupyter_group }}"
      mode: 0755

- name: Copy upstart service
  template:
      src: jupyter-dashboards-server.conf.upstart.j2 
      dest: /etc/init/jupyter-dashboards-server.conf
      owner: root
      group: root
      mode: 0644
  when: ansible_service_mgr=='upstart'

- name: Copy systemd service
  template:
      src: jupyter-dashboards-server.service.systemd.j2 
      dest: /etc/systemd/system/jupyter-dashboards-server.service
      owner: root
      group: root
      mode: 0644
  when: ansible_service_mgr=='systemd'

- name: Start jupyter dashboards server
  service:
      name: jupyter-dashboards-server
      enabled: yes
      state: started

- name: Copy kernelgateway upstart service
  template:
      src: jupyter-kernelgateway.conf.upstart.j2 
      dest: /etc/init/jupyter-kernelgateway.conf
      owner: root
      group: root
      mode: 0644
  when: ansible_service_mgr=='upstart'

- name: Copy kernelgateway systemd service
  template:
      src: jupyter-kernelgateway.service.systemd.j2 
      dest: /etc/systemd/system/jupyter-kernelgateway.service
      owner: root
      group: root
      mode: 0644
  when: ansible_service_mgr=='systemd'

- name: Start jupyter kernelgateway
  service:
      name: jupyter-kernelgateway
      enabled: yes
      state: started

- name: Enable jupyter nbextension contrib
  shell: jupyter contrib nbextension install --sys-prefix

- name: Enable jupyter dashboards
  shell: jupyter dashboards quick-setup --sys-prefix

- name: Enable jupyter dashboard bundlers
  shell: jupyter bundlerextension enable --sys-prefix --py dashboards_bundlers

- name: Setup nginx reverse proxy
  blockinfile:
      dest: "{{ nginx_sites_conf_dir }}/{{ item.servername }}.conf"
      content: "{{ vhost_block }}"
  when: "{{ item.jupyter }} is defined and {{ item.jupyter }}"  
  with_items: "{{ nginx_vhosts }}"
  notify: restart nginx
