
from nightowl.app import app

# Statement for enabling the development environment
DEBUG = False

# Define the application directory
import os
BASE_DIR = os.path.abspath(os.path.dirname(__file__))  

# Define the database - we are working with
# SQLite for this example
#SQLALCHEMY_DATABASE_URI = 'sqlite:///' + os.path.join(BASE_DIR, 'Database/database.db')
SQLALCHEMY_DATABASE_URI = '{{ mysql_uri }}'
MQTT_BROKER_URL = 'localhost'
MQTT_BROKER_PORT = 1883
MQTT_USERNAME = 'smartclassroom'
MQTT_PASSWORD = '{{ item.stdout_lines[2] }}'
{% if item.item.use_https %}
MQTT_TLS_ENABLED = True
MQTT_TLS_INSECURE = True
MQTT_CA_CERTS = '/etc/letsencrypt/live/{{ item.item.servername }}/chain.pem'
{% endif %}

#SQLALCHEMY_DATABASE_URI = 'mysql+pymysql://root:machineLearning2067@localhost/rfid'
APPLICATION_ROOT = '/api'
DATABASE_CONNECT_OPTIONS = {}
SQLALCHEMY_TRACK_MODIFICATIONS = True
# app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = True
# app.config['SECRET_KEY'] = "random string"

# Application threads. A common general assumption is
# using 2 per available processor cores - to handle
# incoming requests using one and performing background
# operations using the other.
THREADS_PER_PAGE = 2

# Enable protection agains *Cross-site Request Forgery (CSRF)*
CSRF_ENABLED     = True

# Use a secure, unique and absolutely secret key for
# signing the data. 
CSRF_SESSION_KEY = '{{ item.stdout_lines[1] }}'

# Secret key for signing cookies
SECRET_KEY = '{{ item.stdout_lines[1] }}'

