- name: "Check for existing mosquitto ca"
  stat:
      path: "/etc/mosquitto/ca.crt"
  register: mosquitto_ca_file

- name: allow 1883 (mosquitto) in iptables public input
  iptables: 
      chain: "{{ iptables_input_chain }}"
      destination: 0.0.0.0/0
      ctstate: NEW
      protocol: tcp
      destination_port: "{{ item }}"
      source: 0.0.0.0/0
      jump: ACCEPT
      state: present
  with_items:
      - 1883
  when: (firewalld_enabled is not defined or not firewalld_enabled or firewalld_enabled=="false") and (ufw_enabled is not defined or not ufw_enabled or ufw_enabled=="false")

- name: allow 1883 (mosquitto) in firewalld
  firewalld:
      port: "{{ item }}"
      permanent: true
      immediate: true
      state: enabled
  with_items:
      - 1883/tcp
  when: firewalld_enabled is defined and (firewalld_enabled==true or firewalld_enabled=="true")

- name: allow 1883 (mosquitto) in ufw
  ufw:
      port: "{{ item }}"
      state: enabled
      policy: allow
  with_items:
      - 1883
  when: ufw_enabled is defined and (ufw_enabled==true or ufw_enabled=="true")

- name: mosquitto fs
  file:
      path: /etc/mosquitto/conf.d
      state: directory
      owner: root
      group: root

- name: mosquitto fs
  file:
      path: "{{ item }}"
      state: directory
      owner: mosquitto
      group: root
  with_items:
      - /var/lib/mosquitto
      - /var/log/mosquitto

- name: "make ca key"
  shell: "openssl genrsa -out /etc/mosquitto/ca.key 2048"
  when: not mosquitto_ca_file.stat.exists

- name: "make ca certificate"
  shell: "openssl req -extensions v3_ca -days 36500 -new -x509 -key /etc/mosquitto/ca.key -out /etc/mosquitto/ca.crt -subj '/C=PH/ST=Negros Oriental/L=Dumaguete City/O=Foundation University/OU=Nightowl/CN=smart-classroom-ca.foundationu.com'"
  when: not mosquitto_ca_file.stat.exists

- name: "makey server key and csr"
  shell: "openssl req -nodes -newkey rsa:2048 -keyout /etc/mosquitto/mosquitto.key -out /etc/mosquitto/mosquitto.csr -subj '/C=PH/ST=Negros Oriental/L=Dumaguete City/O=Foundation University/OU=Nightowl/CN=smart-classroom.foundationu.com'"

- name: "sign server csr"
  shell: "openssl x509 -req -in /etc/mosquitto/mosquitto.csr -CA /etc/mosquitto/ca.crt -CAkey /etc/mosquitto/ca.key -CAcreateserial -out /etc/mosquitto/mosquitto.crt"

- name: mosquitto permissions
  file:
      dest: /etc/mosquitto
      recurse: yes
      owner: mosquitto
      group: root
      mode: "u+r,g+r,o+r"

- name: "Setup mosquitto config"
  template:
      src: "mosquitto.conf.j2"
      dest: "/etc/mosquitto/mosquitto.conf"
      owner: root
      group: root
      mode: 0444
  with_items: "{{ nginx_vhosts }}"
  when: "{{ item.smart_classroom }} is defined and {{ item.smart_classroom }}"  
  notify: reload mosquitto

- name: "Setup mosquitto password"
  expect:
      command: mosquitto_passwd -c /etc/mosquitto/passwd smartclassroom
      responses:
          'Password: ': item.stdout_lines[2]
          'Reenter password: ': item.stdout_lines[2]
  with_items: "{{ passwords.results }}"
  when: "{{ item.item.smart_classroom }} is defined and {{ item.item.smart_classroom }} and not {{ config_file.stat.exists }}"
  notify: reload mosquitto

- name: "Setup mosquitto password again"
  shell: "mosquitto_passwd -b /etc/mosquitto/passwd smartclassroom {{ item.stdout_lines[2] }}"
  with_items: "{{ passwords.results }}"
  when: "{{ item.item.smart_classroom }} is defined and {{ item.item.smart_classroom }} and not {{ config_file.stat.exists }}"
  notify: reload mosquitto

- name: mosquitto service state
  service: name=mosquitto state=restarted enabled=yes

